# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    media_directory: '%kernel.root_dir%/../web/uploads/media'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'
    ActivityBundle\:
        resource: '../../src/ActivityBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/ActivityBundle/{Entity,Repository,Tests}'
    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']
    MainBundle\Controller\:
        resource: '../../src/MainBundle/Controller'
        autowire: true
    MainBundle\Controller\RegistrationController:
        tags: ['controller.service_arguments']
        calls:
            - [setContainer, ["@service_container"]]
        bind:
            $formFactory: "@fos_user.profile.form.factory"
    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    mgilet.twig_extension:
        class: Mgilet\NotificationBundle\Twig\NotificationExtension
        arguments: ['@mgilet.notification', '@security.token_storage', '@twig', '@router']
        public: true
        tags:
            - { name: twig.extension }
    mgilet.notification:
        class: Mgilet\NotificationBundle\Manager\NotificationManager
        arguments: ["@service_container", '@mgilet.notifiable_discovery']
        public: true

    mgilet.notifiable_discovery:
        class: Mgilet\NotificationBundle\NotifiableDiscovery
        arguments: [ '@doctrine.orm.entity_manager', '@annotation_reader']
        public: true

    resto.image_uploader:
        class: MainBundle\ImageUpload
        arguments: ['%images_directory%']

    resto.doctrine_image_listener:
        class: MainBundle\EventListener\ImageUploadListener
        arguments: ['@resto.image_uploader']
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
    ScrumBundle\EventListener\FullCalendarListener:
        tags:
            - { name: 'kernel.event_listener', event: 'fullcalendar.set_data', method: loadEvents }
    authentication.handler.login_success_handler:
        class:  MainBundle\EventListener\LoginSuccessHandler
        arguments:  ['@router', '@security.authorization_checker']